#!/usr/bin/python

#!/usr/bin/env python
#
# [SNIPPET_NAME: Button Box]
# [SNIPPET_CATEGORIES: PyGTK]
# [SNIPPET_DESCRIPTION: Create a button box]
# [SNIPPET_DOCS: http://www.pygtk.org/pygtk2tutorial/sec-ButtonBoxes.html, http://www.pygtk.org/docs/pygtk/class-gtkbuttonbox.html, ]

# example buttonbox.py

import pygtk
pygtk.require('2.0')
import gtk
import testdrive, os

class ButtonBoxExample:
    # Create a Button Box with the specified parameters
    def create_bbox(self, horizontal, title, spacing, layout):
        frame = gtk.Frame(title)

        if horizontal:
            bbox = gtk.HButtonBox()
        else:
            bbox = gtk.VButtonBox()

        bbox.set_border_width(5)
        frame.add(bbox)

        # Set the appearance of the Button Box
        bbox.set_layout(layout)
        bbox.set_spacing(spacing)


        td = testdrive.Testdrive()
        ###########################################
        #TODO: Add Config File Loading around here?
        ###########################################
        # prime configuration with defaults
        config_files = ["/etc/%s" % td.PKGRC, "%s/.%s" % (td.HOME, td.PKGRC), "%s/.config/%s/%s" % (td.HOME, td.PKG, td.PKGRC) ]
        # try to load configuration files; on error exit
        # Let the user know which config files were used
        for i in config_files:
		#info('Trying config in %s' % i)
		if os.path.exists(i):
			try:
				td.load_config_file(i)
			except:
				print "error"
        ###########################################
        ISO = td.list_isos()

        for iso in ISO:
                button = gtk.Button(iso["name"])
                #button.connect("clicked", click_handler)
		bbox.add(button)
		#print("  %s" % (iso["name"]))

        return frame

    def __init__(self):
        window = gtk.Window(gtk.WINDOW_TOPLEVEL)
        window.set_title("Button Boxes")

        window.connect("destroy", lambda x: gtk.main_quit())

        window.set_border_width(10)

        main_vbox = gtk.VBox(False, 0)
        window.add(main_vbox)

        frame_vert = gtk.Frame("TestDrive GTK Test")
        main_vbox.pack_start(frame_vert, True, True, 10)

        hbox = gtk.HBox(False, 0)
        hbox.set_border_width(10)
        frame_vert.add(hbox)

        hbox.pack_start(self.create_bbox(False, "Spread (spacing 5)",
                                         5, gtk.BUTTONBOX_SPREAD),
                      					True, True, 0)

        window.show_all()

def main():
    # Enter the event loop
    gtk.main()

    return 0

if __name__ == "__main__":
    ButtonBoxExample()
    main()

